# docker-compose -f tools/docker/test.compose.yaml up --build
# docker-compose -f tools/docker/test.compose.yaml down -v # -v removes the volume contains the db (ephemeral db)
services:
  backend:
    build: 
      context: ../../
      dockerfile: ${DOCKERFILE}
    container_name: ${APP_CONTAINER_NAME}
    environment:
      - DB_HOST=${DB_CONTAINER_NAME}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER} 
      - DB_PASSWORD=${DB_PASSWORD} 
      - DB_NAME=${DB_NAME}
      - DIR_TO_WATCH=${DIR_TO_WATCH}
      - REPORT_FILE_NAME=${REPORT_FILE_NAME}
      - ARCHIVE_DIR=${ARCHIVE_DIR}
      - IS_TEST=${IS_TEST}
    networks:
      - nrrm_network
    volumes:
      - ../../:/app
    depends_on:
      db:
        condition: service_healthy
        restart: true
  db:
    image: postgres:14.13-alpine3.20
    container_name: ${DB_CONTAINER_NAME}
    expose:
      - "${DB_PORT}"
    environment:
      - POSTGRES_USER=${DB_USER} 
      - POSTGRES_PASSWORD=${DB_PASSWORD} 
      - POSTGRES_DB=${DB_NAME} 
      - PGPORT=${DB_PORT}
    volumes: 
      - nrrm_db_data:/var/lib/postgresql/data
      - ../../app/init.sql:/docker-entrypoint-initdb.d/01-init.sql
    networks:
      - nrrm_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ${DB_NAME}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

volumes:
  nrrm_db_data:

networks:
  nrrm_network: